version: "3.8"

services:
  database:
    container_name: authoriza-database
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-authoriza}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-w135HkeGXg}
      POSTGRES_USER: ${DATABASE_USER:-authoriza}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      - ./api/src/main/resources/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - authoriza

  rabbitmq:
    container_name: authoriza-rabbitmq
    image: "rabbitmq:3.7-management"
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "5630:5672"
      - "8090:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-authoriza}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-w135HkeGXg}
    networks:
      - authoriza

  elasticsearch:
    container_name: authoriza-elasticsearch
    image: "elasticsearch:6.8.4"
    platform: linux/amd64
    restart: unless-stopped
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      - authoriza
    environment:
      - discovery.type=single-node

  app:
    container_name: authoriza-app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - "8080:8080"
    env_file:
      - api/src/main/resources/.env
    tty: true
    networks:
      - authoriza
    depends_on:
      - database
      - rabbitmq

  redis:
    container_name: authoriza-redis
    image: "redis:alpine"
    networks:
      - authoriza

  mailcatcher:
    container_name: authoriza-mailcatcher
    image: "dockage/mailcatcher:0.7.1"
    networks:
      - authoriza

networks:
  authoriza:
    name: authoriza

volumes:
  db-data: